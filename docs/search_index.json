[["index.html", "Tech Companies Proformance During Covid-19 Chapter 1 Introduction 1.1 Background 1.2 Research Topic 1.3 Project Roadmap", " Tech Companies Proformance During Covid-19 Siyu Duan, Jingyuan Liu, Haonan Wen 2020-12-16 Chapter 1 Introduction 1.1 Background After Dictionary.com named pandemic its Word of the Year, users of the online dictionary elected unprecedented as the Peoples Choice 2020 Word of the Year. When concluding 2020, we find that the global pandemic has induced several unprecedent consequences, and the stock market instability is among the list. In March, we have seen circuit breakers triggered 4 times in a week. Analysts said the 2020 stock market crash and the following global economic recession is the worst since the Great Depression. 1.2 Research Topic As the governments around the world have issued lockdown orders, people are forced to stay at home and do everything virtually. We realize that, if there is only one type of company that stands alone in this Coronavirus crash, it is technology companies. Thus, in this project, we purpose the main research question: how did companies in the tech industry perform during the Covid-19 period? 1.3 Project Roadmap In particular, we have picked the 5 most representative types of tech companies including Streaming, Online Shopping, Entertainment (Gaming), Work-From-Home, and integrated companies. In the following pages, we will evaluate the companies performances mainly based on three measurements. First, we look at the companies behave on the stock market. Moreover, we introduce the measurement Confidence Index to evaluate investor confidence in the market. Finally, we also take the companies quarterly revenue into account. Based on the three measurements described above, we hope our work would provide some insight for those who look back at this unprecedented year. "],["data-sources.html", "Chapter 2 Data sources 2.1 Quarterly Revenue of tech companies 2.2 Investors confidence index 2.3 Daily stock price", " Chapter 2 Data sources 2.1 Quarterly Revenue of tech companies The data is collected by using rvest package to scrap data from macrotrends.net. The code below is an example of how data is scraped using Netflix. Other data gathering methods considered are grabbing data directly from each companys financial report as well as copy and paste data from Yahoo Finance. However, I choose to scrap the data because it is the easiest way to download data for multiple companies and all the data has been validated with the companys public financial report or Yahoo Finance to prevent errors. Some issue with the data now is that both variables are in character type and we would like the first to be date variable and second to be numerical. This problem will be handled in Data transformation part. 2.1.1 Example for extracting Netflix quarterly revenue ## Date Revenue ## 1 2020-09-30 $6,436 ## 2 2020-06-30 $6,148 ## 3 2020-03-31 $5,768 ## 4 2019-12-31 $5,467 ## 5 2019-09-30 $5,245 ## 6 2019-06-30 $4,923 ## 7 2019-03-31 $4,521 ## 8 2018-12-31 $4,187 ## 9 2018-09-30 $3,999 ## 10 2018-06-30 $3,907 2.2 Investors confidence index Data collection for individual confidence index is supported by Andrew Redleaf of Lynne and Andrew Redleaf Foundation(previously Whitebox advisors). There are two samples that include in the data: a sample of wealthy individual investors, and a sample of institutional investors. In the years of our interests, the samples of both individual and institutional investors are purchased from InfoUSA( Data Axle: a reputable provider of data). datasets have the U.S. institutional and individual index values from 12/2018 to 10/2020. The One-Year Confidence index is the percentage of respondents giving a number strictly greater than 0 for in one year.Index values are in numeric forms ranging from 0 to 100, and they are reported monthly. potential bias of data comes from two parts. Firstly, the surveys which are randomly sampled to generate datasets conducted at six-month intervals. Thus, the index value of current month is the average of monthly surveys in the past six months. It can be observed from the dataset that the deviation of index values among months is small due to the averaging effect, and it may cause bias when we explore the relationship of stock market and confidence index values. Moreover, the question in the survey is worded to mention the possibilities that the respondent could predict a downturn. Participants tend to have more passive responses than those who receive more optimistically worded questions. Thus, confidence index values in general is a subjective metric. https://som.yale.edu/faculty-research-centers/centers-initiatives/international-center-for-finance/data/stock-market-confidence-indices/united-states-stock-market-confidence-indices 2.3 Daily stock price For each of the companies we choosed, the historical stock price data can be quickly loaded using getSymbols function in quantmod package. Using yahoo as the sourcing method, we load the past daily stock prices including Open price, High price, Low price, Close price, Volume and Adjusted price from January 1, 2020 to December 11, 2020. "],["data-transformation.html", "Chapter 3 Data transformation 3.1 Quarterly Revenue of Tech companies 3.2 Daily Stock Price 3.3 Investors confidence index", " Chapter 3 Data transformation 3.1 Quarterly Revenue of Tech companies After scraping the data from macrotrends.net, we have tables of revenue from each of the company separated. Then we would like to merge the tables by date, one column for each table. The import process is in quarterly_rev_import.rmd. Notice that Zoom, Cisco Systems, and 8*8, inc. has different quarterly system from other companies, we will not discuss them here. ## Date netflix disney amazon att roku overstock blue_apron wayfair etsy ## 1 2018-12-31 4187 15303 72383 47993 276 453 141 2014 200 ## 2 2019-03-31 4521 14922 59700 44827 207 368 142 1945 169 ## 3 2019-06-30 4923 20262 63404 44957 250 374 119 2343 181 ## 4 2019-09-30 5245 19120 69981 44588 261 347 99 2305 198 ## 5 2019-12-31 5467 20858 87437 46821 411 371 94 2533 270 ## 6 2020-03-31 5768 18009 75452 42779 321 352 102 2330 228 ## 7 2020-06-30 6148 11779 88912 40950 356 783 131 4305 429 ## 8 2020-09-30 6436 14742 96145 42340 452 732 112 3840 451 ## farfetch ea sciplay ttwo atvi eght rng msft goog twtr fb aapl ## 1 196 1289 NA 1249 2382 90 189 32471 39276 909 16914 84310 ## 2 174 1238 118 539 1825 94 201 30571 36339 787 15077 58015 ## 3 209 1209 118 540 1396 97 215 33717 38944 841 16886 53809 ## 4 639 1348 116 858 1282 110 233 33055 40499 824 17652 64040 ## 5 -1 1593 113 930 1986 119 253 36906 46075 1007 21082 91819 ## 6 331 1387 118 761 1788 121 268 35021 41159 808 17737 58313 ## 7 365 1459 166 831 1932 122 278 38033 38297 683 18687 59685 ## 8 1134 1151 151 841 1954 129 304 37154 46173 936 21470 64698 3.1.0.1 Standardize quarterly revenue 3.2 Daily Stock Price For each stock, in getSymbols function, we defined parameters like stock symbol, start date and end date (in our case is January 1, 2020 to December 11, 2020). The stock data will be automatically loaded as an xts (Extensible Time Series) object and assigned to a dataset using the stock symbol as the name. To convert the data to dataframe structure, we used as.data.frame(get(stock_index)) to change the structure. Then, we added Date column and Stock Index column and filtered the data to only keep the closing price. With a for-loop, we downloaded the closing price of each stock one by one and appended them together in one dataframe. 3.2.0.1 Stock symbols 3.2.0.2 Download and import data ## downloading NFLX ..... ## ## done. ## downloading DIS ..... ## ## done. ## downloading T ..... ## ## done. ## downloading ROKU ..... ## ## done. ## downloading AMZN ..... ## ## done. ## downloading OSTK ..... ## ## done. ## downloading APRN ..... ## ## done. ## downloading W ..... ## ## done. ## downloading ETSY ..... ## ## done. ## downloading CHWY ..... ## ## done. ## downloading FTCH ..... ## ## done. ## downloading EA ..... ## ## done. ## downloading NTDOY ..... ## ## done. ## downloading SCPL ..... ## ## done. ## downloading TTWO ..... ## ## done. ## downloading ATVI ..... ## ## done. ## downloading ZM ..... ## ## done. ## downloading CSCO ..... ## ## done. ## downloading EGHT ..... ## ## done. ## downloading RNG ..... ## ## done. ## downloading LOGM ..... ## ## done. ## downloading MSFT ..... ## ## done. ## downloading GOOGL ..... ## ## done. ## downloading TWTR ..... ## ## done. ## downloading FB ..... ## ## done. ## downloading AAPL ..... ## ## done. 3.2.0.3 Scale stock closing price To scale the data, each closing price value is divided by the value of first date (January 2, 2020) for that stock and multiplied by 100. 3.3 Investors confidence index For confidence index data, there is a csv file on the website which is free to download. We can easily use read.csv function in R to read in the data. Drop the standard error columns, and rename two  index values columns to differentiate between institutional category and individual category. Moreover, the Date column needs to be formatted in a way that corresponds with other two data source. "],["missing-values.html", "Chapter 4 Missing values", " Chapter 4 Missing values LogMeIn (LOGM)s stock price contains missing values. The closing prices from September 1, 2020 to October 31, 2020 are missing. They are a contiguous piece of time series. We plan to keep them for now. There are no missing values involved in other parts. "],["results.html", "Chapter 5 Results", " Chapter 5 Results "],["interactive-component.html", "Chapter 6 Interactive component 6.1 Introduction to the Graph 6.2 Usage", " Chapter 6 Interactive component 6.1 Introduction to the Graph The interactive plot below allows user to choose any set of stocks they want to compare in one graph. In this way, the user can freely explore all combinations of stocks which may take up to \\(2^{25}\\) static graphs to present. All the closing price are scaled so that they all start at 100. By clicking the colored button before the name of each stock, a line will be added to the graph with the same color as the button. 6.2 Usage When putting mouse over the colored button, the companys full name will be shown in the left after Company name:. By clicking the colored button before the name of each stock, a line will be added to the plot with the same color as the button and the y-axis will be scaled accordingly. A filled button indicates the stock being selected. By clicking the black button at the top of each category, all stocks from that category will be added to the plot. The category buttons only serve for selecting and not for unselecting. The clear button at right will clear all selection and thus clear the plot. "],["conclusion.html", "Chapter 7 Conclusion", " Chapter 7 Conclusion "]]
